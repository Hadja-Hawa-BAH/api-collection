1) Combien de méthodes abstraites sont déclarées dans l’interface « List » ?
L'interface `List` dans le Java Collections Framework déclare un certain nombre de méthodes abstraites. Voici un aperçu des méthodes abstraites spécifiquement déclarées dans l'interface `List` :

1. `int size()`
2. `boolean isEmpty()`
3. `boolean contains(Object o)`
4. `Iterator<E> iterator()`
5. `Object[] toArray()`
6. `<T> T[] toArray(T[] a)`
7. `boolean add(E e)`
8. `boolean remove(Object o)`
9. `boolean containsAll(Collection<?> c)`
10. `boolean addAll(Collection<? extends E> c)`
11. `boolean addAll(int index, Collection<? extends E> c)`
12. `boolean removeAll(Collection<?> c)`
13. `boolean retainAll(Collection<?> c)`
14. `void clear()`
15. `E get(int index)`
16. `E set(int index, E element)`
17. `void add(int index, E element)`
18. `E remove(int index)`
19. `int indexOf(Object o)`
20. `int lastIndexOf(Object o)`
21. `ListIterator<E> listIterator()`
22. `ListIterator<E> listIterator(int index)`
23. `List<E> subList(int fromIndex, int toIndex)`

En comptant ces méthodes, il y a 23 méthodes abstraites déclarées dans l'interface `List`. Ces méthodes doivent être implémentées par toute classe qui implémente l'interface `List`.

2)  Quelle méthode de l’interface « List » est à réimplémenter pour remplacer un élément à une position donnée ?
16. `E set(int index, E element)

3. Quelle est différence entre la classe « ArrayList » et la classe « Vector » ?
ArrayList et Vector se distinguent par le fait que Vector appartient à des classes héritées qui ont été réorganisées par la suite pour prendre en charge les classes de collection, tandis qu'un ArrayList est une classe de collection standard. Une autre différence importante est que ArrayList n'est pas synchronisé. Le vecteur est synchronisé.

4. Quelle structure de données représente la classe « Stack » ?
Le framework Collection fournit la classe Stack qui modélise et implémente la structure de données Pile. Stack est une structure de données linéaire utilisée pour stocker une collection d'objets. Il est basé sur Last-In-First-Out (LIFO). Le framework de collecte Java fournit de nombreuses interfaces et classes pour stocker la collection d'objets.

5. Quel est l’objectif de la méthode « pop » pour un objet de la classe « Stack » ?
	Supprime et renvoie l’élément supérieur de la pile. Une exception ‘EmptyStackException’ est levée si nous appelons pop() lorsque la pile est vide.

6. Quelle opération permet d’ajoute un élément à un objet de la classe « Stack » ?
La methode "push": Ajoute un élément en haut de la pile.

7. Qu’est la classe « Stack » par rapport à la classe « Vector » ?
Stack est une sous-classe de Vector qui implémente une pile standard LIFO

8. Quels sont les avantages d’objets de la classe « LinkedList » par rapport à la classe
« ArrayList » ?

Table de comparaison
Arraylist	                                                                 Linkedlist
1)ArrayList utilise un tableau dynamique pour stocker les éléments.	     LinkedList utilise une liste doublement chaînée pour stocker les éléments.
2)La manipulation avec ArrayList est lente car elle utilise en interne
 un tableau. Si un élément est supprimé du tableau, tous les bits sont 
déplacés en mémoire.	 						     La manipulation avec LinkedList est plus rapide que ArrayList, car elle utilise une liste doublement chaînée, de sorte qu’aucun décalage de bit n’est requis en mémoire.
3)La classe ArrayList peut uniquement servir de liste car elle implémente
 uniquement List.							     La classe LinkedList peut servir de liste et de file car elle implémente les interfaces List et Deque.
4)ArrayList est préférable pour stocker et accéder aux données.	             LinkedList est préférable pour manipuler des données.

HASHMAP
1. Une table associative (map) ou dictionnaire (dictionary) est une collection qui associe des valeurs (values) à des clefs (keys).

2. En Java, quelle classe peut être utilisée pour créer un tableau associatif ?
HashMap et TreeMap

3. Lors de l’instanciation d’un objet de la classe « HashMap », à quoi correspondent les
classes indiquées entre les chevrons ?
Par exemple, à quoi correspond « <String=key, Integer= value > »

4. Quelle méthode peut être utilisée pour ajouter une paire « clef-valeur » à un tableau
associatif ?
put 

5. Dans quelle classe (ou interface) est déclarée la méthode que vous avez trouvé en
répondant à la question précédente ?
HashMap

6. Quel est le type de retour de la méthode « get(Object key) » de la classe
« HashMap » ?
String


